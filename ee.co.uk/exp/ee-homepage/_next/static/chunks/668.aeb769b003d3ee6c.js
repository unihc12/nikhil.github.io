"use strict";
(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [668], {
        668: function(e, a, b) {
            function f(a) {
                return (f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
                    return typeof a
                } : function(a) {
                    return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                })(a)
            }
            Object.defineProperty(a, "__esModule", {
                value: !0
            }), a.default = void 0;
            var c = function(a, h) {
                if (!h && a && a.__esModule) return a;
                if (null === a || "object" !== f(a) && "function" != typeof a) return {
                    default: a
                };
                var c = g(h);
                if (c && c.has(a)) return c.get(a);
                var d = {},
                    i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var b in a)
                    if ("default" !== b && Object.prototype.hasOwnProperty.call(a, b)) {
                        var e = i ? Object.getOwnPropertyDescriptor(a, b) : null;
                        e && (e.get || e.set) ? Object.defineProperty(d, b, e) : d[b] = a[b]
                    }
                return d.default = a, c && c.set(a, d), d
            }(b(7294));

            function g(a) {
                if ("function" != typeof WeakMap) return null;
                var b = new WeakMap,
                    c = new WeakMap;
                return (g = function(a) {
                    return a ? c : b
                })(a)
            }

            function h() {
                return (h = Object.assign ? Object.assign.bind() : function(d) {
                    for (var a = 1; a < arguments.length; a++) {
                        var b = arguments[a];
                        for (var c in b) Object.prototype.hasOwnProperty.call(b, c) && (d[c] = b[c])
                    }
                    return d
                }).apply(this, arguments)
            }
            var d = c.forwardRef(function(a, b) {
                return c.createElement("svg", h({
                    viewBox: "0 0 32 32",
                    xmlns: "http://www.w3.org/2000/svg",
                    ref: b
                }, a), c.createElement("path", {
                    d: "M6.05341 27.8759C5.81849 27.9644 5.56335 27.9849 5.31734 27.9348C5.07133 27.8848 4.84444 27.7663 4.66279 27.593C4.48114 27.4197 4.35211 27.1987 4.29054 26.9553C4.22896 26.7119 4.23736 26.4561 4.31475 26.2172L5.65741 22.0852C4.17879 19.5722 3.66577 16.6067 4.21421 13.7429C4.76264 10.8791 6.33501 8.31304 8.63751 6.52407C10.94 4.7351 13.8151 3.84567 16.7256 4.02197C19.6361 4.19827 22.3828 5.42824 24.4525 7.48206C26.5222 9.53588 27.7733 12.273 27.9721 15.182C28.1708 18.0911 27.3036 20.9729 25.5325 23.2892C23.7613 25.6054 21.2074 27.1975 18.348 27.768C15.4885 28.3386 12.5192 27.8484 9.99474 26.3892L6.05341 27.8759ZM7.70807 24.4026L10.2374 23.4492L11.3307 24.0826C13.2942 25.2169 15.6035 25.5976 17.8272 25.1536C20.0509 24.7096 22.0369 23.4712 23.4142 21.6698C24.7914 19.8684 25.4658 17.6272 25.3113 15.3649C25.1567 13.1026 24.1838 10.9739 22.5744 9.37652C20.9649 7.77914 18.829 6.82233 16.5656 6.68482C14.3022 6.54732 12.0661 7.23854 10.2751 8.62934C8.48414 10.0201 7.26075 12.0154 6.83348 14.2424C6.40622 16.4693 6.80432 18.7757 7.95341 20.7306L8.56407 21.7666L7.70807 24.4026ZM17.3347 17.3333C17.3347 17.6869 17.1943 18.026 16.9442 18.2761C16.6942 18.5261 16.355 18.6666 16.0014 18.6666C15.6478 18.6666 15.3086 18.5261 15.0586 18.2761C14.8085 18.026 14.6681 17.6869 14.6681 17.3333V15.9999C14.6681 15.6463 14.8085 15.3072 15.0586 15.0571C15.3086 14.8071 15.6478 14.6666 16.0014 14.6666C16.3614 14.6666 16.6947 14.5253 16.9441 14.2759C17.0829 14.1363 17.1891 13.9677 17.255 13.7822C17.321 13.5967 17.345 13.3989 17.3255 13.203C17.3059 13.0071 17.2432 12.818 17.1418 12.6492C17.0405 12.4805 16.903 12.3362 16.7393 12.2269C16.5756 12.1175 16.3897 12.0458 16.1949 12.0168C16.0002 11.9878 15.8015 12.0024 15.613 12.0593C15.4246 12.1163 15.2511 12.2142 15.105 12.3462C14.9589 12.4782 14.8438 12.6409 14.7681 12.8226C14.6276 13.1417 14.3678 13.3932 14.0442 13.523C13.7206 13.6528 13.359 13.6507 13.0369 13.5172C12.7148 13.3836 12.4579 13.1292 12.3211 12.8084C12.1844 12.4877 12.1788 12.1261 12.3054 11.8013C12.6088 11.0708 13.1218 10.4466 13.7795 10.0074C14.4373 9.56817 15.2105 9.33359 16.0014 9.33326C16.9454 9.33275 17.8591 9.6661 18.581 10.2743C19.3028 10.8826 19.7864 11.7265 19.946 12.6569C20.1056 13.5873 19.931 14.5441 19.4531 15.3582C18.9753 16.1723 18.2249 16.7911 17.3347 17.1053V17.3333ZM16.0014 22.6666C15.6478 22.6666 15.3086 22.5261 15.0586 22.2761C14.8085 22.026 14.6681 21.6869 14.6681 21.3332C14.6681 20.9796 14.8085 20.6405 15.0586 20.3904C15.3086 20.1404 15.6478 19.9999 16.0014 19.9999C16.355 19.9999 16.6942 20.1404 16.9442 20.3904C17.1943 20.6405 17.3347 20.9796 17.3347 21.3332C17.3347 21.6869 17.1943 22.026 16.9442 22.2761C16.6942 22.5261 16.355 22.6666 16.0014 22.6666Z"
                }))
            });
            a.default = d
        }
    }
])